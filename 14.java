1) Дан целочисленный массив Arr[] размера k, в котором на каком-то ровно одном индексе есть элемент X.
Требуется удалить из массива все элементы после Х.
В этом случае лучше вместо создания нового массива использовать очередь - делаем Enqueue на всех элементах, пока не дойдем до Х.
После этого уже можно создать новый массив размера очереди, делаяя в него Dequeue, так и сохранится порядок элементов.

2) Дан массив строк Arr[] размера k. Требуется удалить из него все повторяющиеся значения.
Если порядок элементов не важен, то в этом случае удобно использовать множества, просто делая put на каждом элементе массива,
поскольку множества не допускают повторяющихся элементов.

3) Аналогично, если требуется найти у двух массивов одинаковые элементы, то можно загнать эти массивы в множества, и сделать intersection.

4) По примеру задачи 1, если требуется в массиве оставить все элементы, идущие после элемента Х, то можно использовать связный список, 
просто поставив указатель головы в Х, как только он будет найден.

5) Если из массива требуется удалить максимальный и минимальные элементы, то можно воспользоваться упорядоченным списком.
Это слишком очевидно, поэтому можно рассмотреть такую задачу:
Пусть дан целочисленный массив Arr[], в котором есть элементы X = Arr[i] и Y = Arr[j], причем i < j, но сами i и j наперед не известны.
Требуется отсортировать массив по возрастанию до X и после Y, т.е. индексы между i и j остаются на месте.
В этой задаче можно создать два упорядоченных списка, загоняя в первый элементы до Х, а во второй - после Y.
Далее полученные отсортированные списки перенести в исходный массив.
